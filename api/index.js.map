{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/stitches.config.ts", "/Users/nsyahrasyad/Documents/personal/nan/app/root.tsx", "/Users/nsyahrasyad/Documents/personal/nan/app/routes/index.tsx", "/Users/nsyahrasyad/Documents/personal/nan/app/routes/$.tsx", "../app/lib/content.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport { getCssText } from \"~/stitches.config\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  ).replace(/<\\/head>/, `<style>${getCssText()}</style></head>`);\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { createStitches, globalCss } from \"@stitches/react\";\n\nconst SPACING = {\n  px: \"1px\",\n  0: \"0\",\n  0.5: \"0.125rem\",\n  1: \"0.25rem\",\n  1.5: \"0.375rem\",\n  2: \"0.5rem\",\n  2.5: \"0.625rem\",\n  3: \"0.75rem\",\n  3.5: \"0.875rem\",\n  4: \"1rem\",\n  5: \"1.25rem\",\n  6: \"1.5rem\",\n  7: \"1.75rem\",\n  8: \"2rem\",\n  9: \"2.25rem\",\n  10: \"2.5rem\",\n  11: \"2.75rem\",\n  12: \"3rem\",\n  14: \"3.5rem\",\n  16: \"4rem\",\n  20: \"5rem\",\n  24: \"6rem\",\n  28: \"7rem\",\n  32: \"8rem\",\n  36: \"9rem\",\n  40: \"10rem\",\n  44: \"11rem\",\n  48: \"12rem\",\n  52: \"13rem\",\n  56: \"14rem\",\n  60: \"15rem\",\n  64: \"16rem\",\n  72: \"18rem\",\n  80: \"20rem\",\n  96: \"24rem\",\n} as const;\n\nexport const { styled, getCssText } = createStitches({\n  theme: {\n    fonts: {\n      serif: `Recoleta, ui-serif, Georgia, serif`,\n      mono: `Menlo, ui-monosapce, monospace`,\n      sans: `Karla, system-ui, -apple-system, sans-serif`,\n    },\n    fontSizes: {\n      sm: \"0.875rem\",\n      base: \"1rem\",\n      lg: \"1.25rem\",\n      xl: \"1.5rem\",\n      \"2xl\": \"1.875rem\",\n    },\n    space: SPACING,\n    sizes: SPACING,\n  },\n});\n\nexport const globalStyles = globalCss({});\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport { globalStyles, getCssText } from \"~/stitches.config\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  globalStyles();\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n        <style dangerouslySetInnerHTML={{ __html: getCssText() }} />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { styled } from \"~/stitches.config\";\n\nexport default function Index() {\n  return (\n    <Wrapper>\n      <h1>Welcome to Remix</h1>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled(\"div\", {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: \"100vh\",\n});\n", "import React from \"react\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\nimport { getMDXComponent } from \"mdx-bundler/client\";\n\nimport { getPost } from \"~/lib/content.server\";\nimport type { Post } from \"~/lib/content.server\";\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params[\"*\"], \"missing slug!\");\n  return getPost(params[\"*\"]);\n};\n\nexport default function PostPage() {\n  const content = useLoaderData<Post>();\n  const PostContent = React.useMemo(\n    () => getMDXComponent(content.code),\n    [content.code]\n  );\n  return (\n    <main>\n      <article>\n        <PostContent />\n      </article>\n    </main>\n  );\n}\n", "import { bundleMDX } from \"mdx-bundler\";\nimport * as fs from \"fs/promises\";\nimport * as path from \"path\";\nimport glob from \"glob\";\nimport matter from \"gray-matter\";\n\nconst CONTENT_FOLDER = `${__dirname}/../app/_dist-content`;\nconst POST_FILENAME = \"index.mdx\";\n\nexport type Post = {\n  code: string;\n  frontmatter: Record<string, any>;\n};\n\nexport type PostMetadata = {\n  frontmatter: Record<string, any>;\n  slug: string;\n};\n\n/**\n * Gets the post from `dist/content` and bundles it using MDX bundler\n */\nexport const getPost = async (slug: string): Promise<Post> => {\n  const postFolder = path.join(CONTENT_FOLDER, slug);\n  const mdxSource = await fs.readFile(path.join(postFolder, POST_FILENAME));\n  return bundleMDX({\n    source: mdxSource.toString(),\n    cwd: postFolder,\n    esbuildOptions(options) {\n      /**\n       * Babel saves React files with a .js extension, so we have to explicitly tell\n       * esbuild to parse these files assuming it contains JSX\n       */\n      options.loader = {\n        \".js\": \"jsx\",\n      };\n      return options;\n    },\n  });\n};\n\nexport const getAllPosts = async (): Promise<PostMetadata[]> => {\n  const paths = await getAllPostPaths();\n  return Promise.all(\n    paths.map(async (postPath) => {\n      const file = await fs.readFile(path.join(process.cwd(), postPath));\n      const { data: frontmatter } = matter(file.toString());\n      return {\n        slug: postPath.replace(\"app/content/\", \"\").replace(\"/index.mdx\", \"\"),\n        frontmatter,\n      };\n    })\n  );\n};\n\nconst getAllPostPaths = () => {\n  return new Promise<string[]>((resolve, reject) => {\n    glob(\"app/content/**/index.mdx\", (err, matches) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(matches);\n      }\n    });\n  });\n};\n", "export default {'version':'ea54bb32','entry':{'module':'/build/entry.client-GK7O4OFD.js','imports':['/build/_shared/chunk-YVRX5TYR.js','/build/_shared/chunk-BQYI6ZL5.js','/build/_shared/chunk-DNEVBLEG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-OTKZQUYC.js','imports':['/build/_shared/chunk-NEIP56BR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$':{'id':'routes/$','parentId':'root','path':'*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$-3H4XHGFB.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-QB6KYJRT.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-EA54BB32.js'};", "\nimport * as entryServer from \"/Users/nsyahrasyad/Documents/personal/nan/app/entry.server.tsx\";\nimport * as route0 from \"/Users/nsyahrasyad/Documents/personal/nan/app/root.tsx\";\nimport * as route1 from \"/Users/nsyahrasyad/Documents/personal/nan/app/routes/index.tsx\";\nimport * as route2 from \"/Users/nsyahrasyad/Documents/personal/nan/app/routes/$.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/$\": {\n      id: \"routes/$\",\n      parentId: \"root\",\n      path: \"*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": []
}
